type Product {
    id_product: ID! @goField(name: "IdProduct")
    code: String!
    name: String!
    description: String
    price: Int!
    category: String!
    is_empty: Boolean!
    mass: Int!
    image: String
    created_at: Time!
    updated_at: Time!
}

type ProductRecommendation {
    apriori_id: ID! @goField(name: "AprioriId")
    apriori_code: String!
    apriori_item: String!
    apriori_discount: Float!
    apriori_description: String
    apriori_image: String
    product_total_price: Int!
    price_discount: Int!
    mass: Int!
}


input CreateProductRequest {
    code: String! @binding(constraint: "required,min=2,max=10")
    name: String! @binding(constraint: "required,min=6,max=100")
    description: String! @binding(constraint: "omitempty,max=256")
    price: Int! @binding(constraint: "required,min=0")
    category: String! @binding(constraint: "required,max=100")
    mass: Int!
    image: Upload!
}

input UpdateProductRequest {
    code: String!
    name: String! @binding(constraint: "required,min=6,max=100")
    description: String! @binding(constraint: "omitempty,max=256")
    price: Int! @binding(constraint: "min=0")
    category: String! @binding(constraint: "required,max=100")
    is_empty: Boolean!
    mass: Int!
    image: Upload!
}